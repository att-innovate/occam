#!/usr/bin/env ruby
###############################################################################
##                                                                           ##
## The MIT License (MIT)                                                     ##
##                                                                           ##
## Copyright (c) 2014 AT&T Inc.                                              ##
##                                                                           ##
## Permission is hereby granted, free of charge, to any person obtaining     ##
## a copy of this software and associated documentation files                ##
## (the "Software"), to deal in the Software without restriction, including  ##
## without limitation the rights to use, copy, modify, merge, publish,       ##
## distribute, sublicense, and/or sell copies of the Software, and to permit ##
## persons to whom the Software is furnished to do so, subject to the        ##
## conditions as detailed in the file LICENSE.                               ##
##                                                                           ##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS   ##
## OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF                ##
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.    ##
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY      ##
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT ##
## OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR  ##
## THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                ##
##                                                                           ##
###############################################################################

require 'json'
require 'yaml'
require 'net/http'
require 'uri'

enc_uri = URI.parse("http://127.0.0.1:8160/api/puppet/enc/#{ARGV[0]}")
enc_conn = Net::HTTP.new(enc_uri.host, enc_uri.port)
enc_conn.open_timeout = 2
enc_conn.read_timeout = 2
tries = 3

begin
  enc_response = enc_conn.get(enc_uri.request_uri)
  if enc_response.code =~ /^20./
    puts JSON.parse(enc_response.body).to_yaml
  else
    raise "Unexpected response #{enc_response.code}"
  end

rescue Timeout::Error
  tries -= 1
  if tries > 0
    retry
  else
    puts "OccamEngine request took too long"
    exit 11
  end
rescue Errno::ECONNREFUSED
  puts "OccamEngine is down"
  exit 22
rescue Exception => e
  puts e.inspect
  exit 33
end
